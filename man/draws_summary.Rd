% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarise_draws.R
\name{draws_summary}
\alias{draws_summary}
\alias{summarise_draws}
\alias{summarize_draws}
\alias{summarise_draws.draws}
\alias{summary.draws}
\alias{summarise_draws.rvar}
\alias{summary.rvar}
\alias{default_summary_measures}
\alias{default_convergence_measures}
\alias{default_mcse_measures}
\title{Summaries of \code{draws} objects}
\usage{
summarise_draws(x, ...)

summarize_draws(x, ...)

\method{summarise_draws}{draws}(x, ..., .args = list(), .cores = 1)

\method{summary}{draws}(object, ...)

\method{summarise_draws}{rvar}(x, ...)

\method{summary}{rvar}(object, ...)

default_summary_measures()

default_convergence_measures()

default_mcse_measures()
}
\arguments{
\item{x, object}{A \code{draws} object or one coercible to a \code{draws} object.}

\item{...}{Name-value pairs of summary functions.
The name will be the name of the variable in the result unless
the function returns a named vector in which case the latter names
are used. Functions can be passed in all formats supported by
\link[rlang:as_function]{as_function()}. See the 'Examples' section below
for examples.}

\item{.args}{Optional \code{list} of additional arguments passed to the summary
functions.}

\item{.cores}{Positive number of cores for computing summaries for different
variables in parallel. Coerced to integer if possible, otherwise errors.
Defaults to \code{.cores = 1} in which case no parallelization is implemented.
By default, creates a socket cluster on Windows and forks otherwise.}
}
\value{
The \code{summarise_draws()} methods return a \link[tibble:tibble]{tibble} data frame.
The first column, \code{"variable"}, contains the variable names and the remaining
columns contain summary statistics and diagnostics.
}
\description{
The \code{summarise_draws()} (and \code{summarize_draws()}) methods provide a quick way
to get a table of summary statistics and diagnostics. These methods will
convert an object to a \code{draws} object if it isn't already. For convenience, a
\link[base:summary]{summary()} method for \code{draws} and \code{rvar} objects are also
provided as an alias for \code{summarise_draws()} if the input object is a \code{draws}
or \code{rvar} object.
}
\details{
By default, the following summary functions are used: \code{\link[=mean]{mean()}}, \code{\link[=median]{median()}},
\code{\link[=sd]{sd()}}, \code{\link[=mad]{mad()}}, \code{\link[=quantile2]{quantile2()}}, \code{\link[=rhat]{rhat()}}, \code{\link[=ess_bulk]{ess_bulk()}}, and \code{\link[=ess_tail]{ess_tail()}}.
The functions \code{default_summary_measures()}, \code{default_convergence_measures()},
and \code{default_mcse_measures()} return character vectors of names of the
default measures included in the package. See \code{?posterior::diagnostics}
for a list of available diagnostics and links to their individual help pages.
}
\examples{
x <- example_draws("eight_schools")
class(x)
str(x)

summarise_draws(x)
summarise_draws(x, "mean", "median")
summarise_draws(x, default_convergence_measures())
summarise_draws(x, mean, mcse = mcse_mean)
summarise_draws(x, ~quantile(.x, probs = c(0.4, 0.6)))

# illustrate use of '.args'
ws <- rexp(ndraws(x))
summarise_draws(x, weighted.mean, .args = list(w = ws))

}
